version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: modelforge-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-modelforge}
      POSTGRES_USER: ${POSTGRES_USER:-modelforge}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-modelforge123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U modelforge"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - modelforge-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: modelforge-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - modelforge-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: modelforge-backend
    command: uvicorn backend.api.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
      - ./workspaces:/app/workspaces
      - ./logs:/app/logs
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-modelforge}:${POSTGRES_PASSWORD:-modelforge123}@postgres:5432/${POSTGRES_DB:-modelforge}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - WORKSPACE_DIR=/app/workspaces
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - modelforge-network

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: modelforge-worker
    command: celery -A backend.workers.celery_app worker --loglevel=info --concurrency=2
    volumes:
      - ./backend:/app/backend
      - ./workspaces:/app/workspaces
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-modelforge}:${POSTGRES_PASSWORD:-modelforge123}@postgres:5432/${POSTGRES_DB:-modelforge}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - WORKSPACE_DIR=/app/workspaces
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - modelforge-network

  # Celery Beat (Periodic Tasks)
  beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: modelforge-beat
    command: celery -A backend.workers.celery_app beat --loglevel=info
    volumes:
      - ./backend:/app/backend
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-modelforge}:${POSTGRES_PASSWORD:-modelforge123}@postgres:5432/${POSTGRES_DB:-modelforge}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - modelforge-network

  # Flower (Celery Monitoring)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: modelforge-flower
    command: celery -A backend.workers.celery_app flower --port=5555
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - modelforge-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  modelforge-network:
    driver: bridge